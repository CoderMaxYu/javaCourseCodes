# 同一个主机，两个库，演示分库分表
# 数据源 db0,db1
sharding.jdbc.datasource.names=db0,db1
# 第一个数据库
sharding.jdbc.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db0.jdbc-url=jdbc:mysql://127.0.0.1:3306/shop_test1?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=123456

# 第二个数据库
sharding.jdbc.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db1.jdbc-url=jdbc:mysql://127.0.0.1:3306/shop_test2?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=123456


# user表和product表 分库不分表
#user表
# 分库策略
sharding.jdbc.config.sharding.tables.user.database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.user.database-strategy.inline.algorithm-expression=db$->{user_id%2}
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=db$->{0..1}.user
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.user.key-generator.column=user_id
sharding.jdbc.config.sharding.tables.user.key-generator.type=SNOWFLAKE

#product表
# 分库策略
sharding.jdbc.config.sharding.tables.product.database-strategy.inline.sharding-column=product_id
sharding.jdbc.config.sharding.tables.product.database-strategy.inline.algorithm-expression=db$->{product_id%2}
sharding.jdbc.config.sharding.tables.product.actual-data-nodes=db$->{0..1}.product
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.product.key-generator.column=product_id
sharding.jdbc.config.sharding.tables.product.key-generator.type=SNOWFLAKE

#order表
# 分库策略
sharding.jdbc.config.sharding.tables.order.database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.order.database-strategy.inline.algorithm-expression=db$->{user_id%2}
#分表策略
sharding.jdbc.config.sharding.tables.order.actual-data-nodes=db$->{0..1}.order_$->{0..15}
sharding.jdbc.config.sharding.tables.order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order.table-strategy.inline.algorithm-expression=order_$->{order_id%16}
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.order.key-generator.column=order_id
sharding.jdbc.config.sharding.tables.order.key-generator.type=SNOWFLAKE


# 打印执行的数据库以及语句
sharding.jdbc.config.props.sql.show=true
spring.main.allow-bean-definition-overriding=true

sharding.binding-tables[0]=user,order